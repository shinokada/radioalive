#!/usr/bin/env bash

set -eu

# shellcheck disable=SC2034
VERSION="0.4.3"
SCRIPT_DOT_DIR="$HOME/.config/tera"
# CACHE_DIR="$HOME/.cache"
FAVORITE_PATH="$SCRIPT_DOT_DIR/favorite"
TMP_PATH="$HOME/.cache/tera"
CONFIG_FILE="$SCRIPT_DOT_DIR/tera_config.conf"
FAVORITE_FILE="sample.json"
FAVORITE_FULL="${FAVORITE_PATH}/${FAVORITE_FILE}"
SCRIPT_NAME=$(basename "$0")
APP_NAME="TERA"
RADIO_BROWSER="https://de1.api.radio-browser.info/json/stations/bytag/"
SEARCH_URL="http://all.api.radio-browser.info/json/stations/search"

readlinkf() {
    [ "${1:-}" ] || return 1
    max_symlinks=40
    CDPATH='' # to avoid changing to an unexpected directory

    target=$1
    [ -e "${target%/}" ] || target=${1%"${1##*[!/]}"} # trim trailing slashes
    [ -d "${target:-/}" ] && target="$target/"

    cd -P . 2>/dev/null || return 1
    while [ "$max_symlinks" -ge 0 ] && max_symlinks=$((max_symlinks - 1)); do
        if [ ! "$target" = "${target%/*}" ]; then
            case $target in
            /*) cd -P "${target%/*}/" 2>/dev/null || break ;;
            *) cd -P "./${target%/*}" 2>/dev/null || break ;;
            esac
            target=${target##*/}
        fi

        if [ ! -L "$target" ]; then
            target="${PWD%/}${target:+/}${target}"
            printf '%s\n' "${target:-/}"
            return 0
        fi

        # `ls -dl` format: "%s %u %s %s %u %s %s -> %s\n",
        #   <file mode>, <number of links>, <owner name>, <group name>,
        #   <size>, <date and time>, <pathname of link>, <contents of link>
        # https://pubs.opengroup.org/onlinepubs/9699919799/utilities/ls.html
        link=$(ls -dl -- "$target" 2>/dev/null) || break
        target=${link#*" $target -> "}
    done
    return 1
}

self=$(readlinkf "$0")
script_dir=${self%/*}

# shellcheck disable=SC1091
{
    . "${script_dir}/lib/delete_station.sh"
    . "${script_dir}/lib/gistlib.sh"
    . "${script_dir}/lib/lib.sh"
    . "${script_dir}/lib/list.sh"
    . "${script_dir}/lib/lucky.sh"
    . "${script_dir}/lib/play.sh"
    . "${script_dir}/lib/search.sh"
}

check_cmd mpv
check_cmd jq
check_cmd fzf
check_cmd wget

# check ~/.tera/favorite
if [ ! -d "$FAVORITE_PATH" ]; then
    mkdir -p "$FAVORITE_PATH"
fi
if [ ! -d "$TMP_PATH" ]; then
    mkdir -p "$TMP_PATH"
fi
# Ensure the configuration file exists, create it with default settings if not
if [ ! -f "$CONFIG_FILE" ]; then
    mkdir -p "$(dirname "$CONFIG_FILE")"
    echo "volume=100" > "$CONFIG_FILE"  # Default volume set to 100%
fi
# TODO
# 1. If $FAVORITE_PATH has no file copy the sample.json
# 2. If $FAVORITE_PATH has one file and content is less than
# 5 lines, copy the sample.json

if [ ! -f "$FAVORITE_FULL" ]; then
    touch "$FAVORITE_FULL"
    cp "${script_dir}/lib/sample.json" "$FAVORITE_FULL"
fi

menu() {
    printf "%b" "
$APP_NAME MAIN MENU
$(greenprint '1)') Play from my list
$(greenprint '2)') Search radio stations
$(greenprint '3)') List (Create/Read/Update/Delete)
$(greenprint '4)') Delete a radio station 
$(greenprint '5)') I feel lucky
$(greenprint '6)') Gist
$(greenprint '0)') Exit
$(blueprint 'Choose an option:') "
    read -r ans
    case $ans in
    1)
        fn_play
        menu
        ;;
    2)
        search_menu
        menu
        ;;
    3)
        list_menu
        menu
        ;;
    4)
        fn_delete
        menu
        ;;
    5)
        fn_lucky
        menu
        ;;
    6)
        gist_menu
        menu
        ;;
    0)
        yellowprint "Bye-bye."
        exit 0
        ;;
    *)
        redprint 'Wrong option.'
        menu
        ;;
    esac
}

usage() {
    cat <<EOF
    Name: $APP_NAME

    Usage:
    $SCRIPT_NAME

EOF
}

while [ $# -gt 0 ]; do
    case $1 in
    -V | --version)
        echo $VERSION
        exit
        ;;
    -h | --help | *)
        usage
        exit
        ;;
    esac
done

menu
